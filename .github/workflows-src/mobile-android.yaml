  mobile-android:
    needs: [bootstrap, is-act]
    runs-on: ${{ needs.is-act.outputs.result && 'ubuntu-latest' || 'macos-latest' }}
    strategy:
      fail-fast: false
      matrix:
        ndk:
          ## https://developer.android.com/ndk/downloads/revision_history
          ## https://github.com/android/ndk/wiki/Unsupported-Downloads
          - '16.1.4479499' ## Android NDK r16b (December 2017) (API 14-27) NDK: 16.1.4479499
          - '23.1.7779620' ## Android NDK r23 LTS (August 2021) (API 16+) NDK: 23.1.7779620
        arch:
          ## - armeabi-v7a # unsupported by reactivecircus/android-emulator-runner
          # - arm64-v8a # (require Android 4.2+ (API 17+) and are limited to fewer API levels (e.g. 30))
          - x86
          - x86_64 # (requires: API 21+)
        type: # Device type
          - default # works (API 29)
          # - google_apis # works (API 29)
          # - playstore # works (API 29)
          # - android-wear
          # - android-wear-cn
          # - android-tv # works (API 29)
          # - google-tv
          ## - aosp_atd (requires: api-level: 30, arch: x86)
          ## - google_atd (requires: api-level: 30, arch: x86)
        api:
          ## Minimum API reactivecircus/android-emulator-runner supports is 15 (Android 4.0.3)
          - 15
          - 16
          - 17
          - 18
          - 19
          - 20
          - 21
          - 22
          - 23
          - 24
          - 25
          - 26
          - 27
          - 28
          - 29
          - 30 # Failed to find package 'system-images;android-30;default;x86'
          - 31 # Failed to find package 'system-images;android-31;default;x86'
        exclude:
          - { arch: x86, api: 20 } ## Failed to find package 'system-images;android-20;default;x86'
    env:
      NDK: ${{ matrix.ndk }}
      ARCH: ${{ matrix.arch }}
      API: ${{ matrix.api }}

      DEST_DIR: /data/local/tmp # An Android directory which is writable and not noexec

    steps:
      ## Ensure $ANDROID_SDK_ROOT is setup as it is missing on `act`
      - run: echo "ANDROID_SDK_ROOT=${ANDROID_SDK_ROOT:-/usr/local/lib/android/sdk}" >> $GITHUB_ENV
      - run: sudo mkdir -p "$ANDROID_SDK_ROOT" || true
      - run: sudo chmod a+rwx "$ANDROID_SDK_ROOT"

      - if: ${{ env.ACT }}
        run: sudo apt-get update
      - if: ${{ env.ACT }}
        run: sudo apt-get install --assume-yes default-jre # Needed by android-emulator-runner
      - if: ${{ env.ACT }}
        run: sudo apt-get install --assume-yes libncurses5 # Some `clang` need this

      - uses: actions/download-artifact@v2
        with: { name: bootstrap-output }
      - run: tar -xvf fileinfo.tar

      # TODO: a message for when a config is skipped
      - if: >
          (!(matrix.ndk == '16.1.4479499' && matrix.api > 27)) &&
          (!(matrix.ndk == '23.1.7779620' && matrix.api < 16)) &&
          (!(matrix.arch == 'arm64-v8a' && matrix.api < 28)) &&
          (!(matrix.arch == 'x86_64' && matrix.api < 21))
        uses: reactivecircus/android-emulator-runner@v2
        with:
          arch: ${{ matrix.arch }}
          target: ${{ matrix.type }}
          api-level: ${{ env.API }}
          ndk: ${{ env.NDK }}
          script: |
            .github/configure-android

            cat src/config.h
            cat src/headers.h
            cat src/fileinfo/static.h

            make
            make check

            adb push fileinfo-fields-dynamic "$DEST_DIR"/
            adb shell chmod a+x "$DEST_DIR"/fileinfo-fields-dynamic
            adb shell "$DEST_DIR"/fileinfo-fields-dynamic

            adb push fileinfo-file-dynamic "$DEST_DIR"/
            adb shell chmod a+x "$DEST_DIR"/fileinfo-file-dynamic
            adb shell "$DEST_DIR"/fileinfo-file-dynamic "$DEST_DIR"/fileinfo-file-dynamic
