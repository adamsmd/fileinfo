  docker-alpine: # A distribution optimized for containers
    env: { image: "alpine:${{ matrix.version }}" }
    needs: bootstrap
    runs-on: ubuntu-latest
    steps: *docker-steps
    strategy:
      fail-fast: false
      matrix:
        platform:
          - 386
          - amd64
          - arm/v6
          - arm/v7
          - arm64/v8
          - ppc64le
          - s390x
        version:
          - latest # works
          - '3.15' # works
          - '3.14' # works
          - '3.13' # works
          - '3.12' # works

  docker-ubuntu:
    env: { image: "ubuntu:${{ matrix.version }}" }
    needs: bootstrap
    runs-on: ubuntu-latest
    steps: *docker-steps
    strategy:
      fail-fast: false
      matrix:
        platform:
          - amd64
          - arm/v7
          - arm64/v8
          - ppc64le
          - riscv64
          - s390x
        version:
          - 'latest' # works
          - '22.04' # works
          - '21.10' # works
          - '21.04' # works
          - '20.04' # works
          - '18.04' # works
          - '16.04' # works
          - '14.04' # works
        exclude:
          - { version: '18.04', platform: riscv64 }
          - { version: '16.04', platform: riscv64 }
          - { version: '14.04', platform: riscv64 }
          - { version: '14.04', platform: s390x }


  docker-centos:
    env: { image: "debian:${{ matrix.version }}" }
    needs: bootstrap
    runs-on: ubuntu-latest
    steps: *docker-steps
    strategy:
      fail-fast: false
      matrix:
        platform:
        version:
        include:
          - { version: 8, platform: amd64 }
          - { version: 8, platform: arm64/v8 }
          - { version: 8, platform: ppc64le }
          - { version: 7, platform: 386 }
          - { version: 7, platform: amd64 }
          - { version: 7, platform: arm/v7 }
          - { version: 7, platform: arm64/v8 }
          - { version: 7, platform: ppc64le }
          - { version: 6, platform: 386 }
          - { version: 6, platform: amd64 }

  docker-debian:
    env: { image: "debian:${{ matrix.version }}-slim" }
    needs: bootstrap
    runs-on: ubuntu-latest
    steps: *docker-steps
    strategy:
      fail-fast: false
      matrix:
        platform:
          - 386
          - amd64
          - arm/v5
          - arm/v7
          - arm64/v8
          - mips64le
          - ppc64le
          - riscv64
          - s390x
        version:
          - latest # works
          - unstable # works
          - testing # works
          - stable # works
          - oldstable # works
          - oldoldstable # works
          - '11.2' # works
          - '10.11' # works
          - '9.13' # works

  docker-fedora:
    env: { image: "fedora:${{ matrix.version }}" }
    needs: bootstrap
    runs-on: ubuntu-latest
    steps: *docker-steps
    strategy:
      fail-fast: false
      matrix:
        platform:
          - amd64
          - arm/v7
          - arm64/v8
          - ppc64le
          - s390x
        version:
          - latest # works
          - rawhide # works
          - 36 # works
          - 35 # works
          - 34 # works
          - 33 # works

  docker-amazonlinux:
    env: { image: "amazonlinux:${{ matrix.version }}" }
    needs: bootstrap
    runs-on: ubuntu-latest
    steps: *docker-steps
    strategy:
      fail-fast: false
      matrix:
        platform:
          - amd64
          - arm64/v8
        version:
          - latest
          - 2
          - 1

  docker-oraclelinux:
    env: { image: "oraclelinux:${{ matrix.version }}" }
    needs: bootstrap
    runs-on: ubuntu-latest
    steps: *docker-steps
    strategy:
      fail-fast: false
      matrix:
        platform:
          - amd64
          - arm64/v8
        version:
          - 8
          - 7

  docker-ros: # Robot operating system
    env: { image: "ros:${{ matrix.version }}" }
    needs: bootstrap
    runs-on: ubuntu-latest
    steps: *docker-steps
    strategy:
      fail-fast: false
      matrix:
        platform:
          - amd64
          - arm64/v8
        version:
          - latest
          #### Rolling release
          - rolling
          #### ROS 2
          - galactic
          - foxy
          #### ROS 1
          - noetic
          - melodic
        include:
          - { version: noetic, platform: arm/v7 }
          - { version: melodic, platform: arm/v7 }

  docker-photon: # VmWare Photon
    env: { image: "photon:${{ matrix.version }}" }
    needs: bootstrap
    runs-on: ubuntu-latest
    steps: *docker-steps
    strategy:
      fail-fast: false
      matrix:
        platform:
          - amd64
        version:
          - latest # needs coreutils but is also missing `as`

  docker-clearlinux:
    env: { image: "clearlinux:${{ matrix.version }}" }
    needs: bootstrap
    runs-on: ubuntu-latest
    steps: *docker-steps
    strategy:
      fail-fast: false
      matrix:
        platform:
          - amd64
        version:
          - clearlinux:latest # slow install

  docker-mageia:
    env: { image: "mageia:${{ matrix.version }}" }
    needs: bootstrap
    runs-on: ubuntu-latest
    steps: *docker-steps
    strategy:
      fail-fast: false
      matrix:
        platform:
          - amd64
        version:
          - latest # slow install
          - cauldron # slow install
          - 8 # slow install
          - 7 # slow install

  docker-rockylinux:
    env: { image: "rockylinux:${{ matrix.version }}" }
    needs: bootstrap
    runs-on: ubuntu-latest
    steps: *docker-steps
    strategy:
      fail-fast: false
      matrix:
        platform:
          - amd64
          - arm64/8
        version:
          - latest
          - 8

  docker-sl: # Scientific Linux
    env: { image: "sl:${{ matrix.version }}" }
    needs: bootstrap
    runs-on: ubuntu-latest
    steps: *docker-steps
    strategy:
      fail-fast: false
      matrix:
        platform:
          - amd64
        version:
          - latest
          - 7

  docker-clefos: # For IBM Z
    env: { image: "clefos:${{ matrix.version }}" }
    needs: bootstrap
    runs-on: ubuntu-latest
    steps: *docker-steps
    strategy:
      fail-fast: false
      matrix:
        platform:
          - s390x
        version:
          - latest
          - 7

  docker-almalinux:
    env: { image: "almalinux:${{ matrix.version }}" }
    needs: bootstrap
    runs-on: ubuntu-latest
    steps: *docker-steps
    strategy:
      fail-fast: false
      matrix:
        platform:
          - amd64
          - arm64/v8
        version:
          - latest
          - minimal # no c compiler
          - 8
          - 7 # no c compiler

  docker-alt:
    env: { image: "alt:${{ matrix.version }}" }
    needs: bootstrap
    runs-on: ubuntu-latest
    steps: *docker-steps
    strategy:
      fail-fast: false
      matrix:
        platform:
          - 386
          - amd64
          - arm/v7
          - arm64/v8
          - ppc64le
        version:
          - latest # works
          - sisyphus # works
          - p10 # works
          - p9 # works

  docker-archlinux:
    env: { image: "archlinux:${{ matrix.version }}" }
    needs: bootstrap
    runs-on: ubuntu-latest
    steps: *docker-steps
    strategy:
      fail-fast: false
      matrix:
        platform:
          - amd64
        version:
          - latest # no c compiler
          - base # no c compiler
          - base-devel # works

  docker-openwrtorg:
    env: { image: "openwrtorg/rootfs:${{ matrix.arch }}" }
    needs: bootstrap
    runs-on: ubuntu-latest
    steps: *docker-steps
    strategy:
      fail-fast: false
      matrix:
        platform:
          - amd64
        arch:
          - x86-64 # works
          - armvirt-32 # Error relocating /bin/grep: reallocarray: symbol not found
          - armvirt-64 # Error relocating /bin/grep: reallocarray: symbol not found

  docker-openmandriva:
    env: { image: "openmandriva/${{ matrix.version }}" }
    needs: bootstrap
    runs-on: ubuntu-latest
    steps: *docker-steps
    strategy:
      fail-fast: false
      matrix:
        platform:
          - amd64
        arch:
          - cooker # no c compiler
          - '4.2' # no c compiler
          - '4.0'
          - '3.0'

  docker-opensuse:
    env: { image: "opensuse/${{ matrix.version }}" }
    needs: bootstrap
    runs-on: ubuntu-latest
    steps: *docker-steps
    strategy:
      fail-fast: false
      matrix:
        platform:
          - amd64
        version:
          - leap:latest
          - leap:15
          - leap:42
          - tumbleweed # no c compiler
          - s390x

  docker-slackware:
    env: { image: "vbatts/slackware:${{ matrix.version }}" }
    needs: bootstrap
    runs-on: ubuntu-latest
    steps: *docker-steps
    strategy:
      fail-fast: false
      matrix:
        platform:
          - amd64
        version:
          - latest # no c compiler
          - current
          - '14.2'
          - '14.1'
          - '14.0'
          - '13.1'
          - '13.0'

  # C compiler doesn't work
  docker-chromebrew: # ChromeOS
    env: { image: "chromebrew/chromeos-${{ matrix.version }}:latest" }
    needs: bootstrap
    runs-on: ubuntu-latest
    steps: *docker-steps
    strategy:
      fail-fast: false
      matrix:
        platform:
          - amd64
        version:
          - armv7l-fievel-m92
          - i686-alex-m58
          - x86_64-kip-m92
          - x86_64-nocturne-m90
        include:
          - { version: armv7l-fievel-m91, platform: arm }

  docker-gentoo:
    env: { image: "gentoo/stage3:${{ matrix.tag }}" }
    needs: bootstrap
    runs-on: ubuntu-latest
    steps: *docker-steps
    strategy:
      fail-fast: false
      matrix:
        include:
          - { tag: amd64-hardened-nomultilib-openrc, platform: amd64 }
          - { tag: amd64-hardened-openrc, platform: amd64 }
          - { tag: amd64-musl-hardened, platform: amd64 }
          - { tag: amd64-musl, platform: amd64 }
          - { tag: amd64-nomultilib-openrc, platform: amd64 }
          - { tag: amd64-nomultilib-systemd, platform: amd64 }
          - { tag: amd64-openrc, platform: amd64 }
          - { tag: amd64-systemd, platform: amd64 }
          - { tag: arm64-systemd, platform: arm64 }
          - { tag: arm64, platform: arm64 }
          - { tag: armv5tel-openrc, platform: arm }
          - { tag: armv5tel-systemd, platform: arm }
          - { tag: armv6j_hardfp-openrc, platform: arm }
          - { tag: armv6j_hardfp-systemd, platform: arm }
          - { tag: armv6j-openrc, platform: arm }
          - { tag: armv6j-systemd, platform: arm }
          - { tag: armv7a_hardfp-openrc, platform: arm }
          - { tag: armv7a_hardfp-systemd, platform: arm }
          - { tag: armv7a-openrc, platform: arm }
          - { tag: armv7a-systemd, platform: arm }
          - { tag: hardened-nomultilib, platform: amd64 }
          - { tag: hardened, platform: 386 }
          - { tag: hardened, platform: amd64 }
          - { tag: i686-hardened-openrc, platform: 386 }
          - { tag: i686-musl, platform: 386 }
          - { tag: i686-openrc, platform: 386 }
          - { tag: i686-systemd, platform: 386 }
          - { tag: latest, platform: 386 }
          - { tag: latest, platform: amd64 }

          # - tag: latest linux            platform: arm/v5
          # - tag: musl linux/386            platform: linux/amd64
          # - tag: musl-hardened            platform: linux/amd64
          # - tag: musl-hardened            platform: linux/ppc64le
          # - tag: nomultilib            platform: linux/amd64
          # - tag: nomultilib-systemd            platform: linux/amd64
          # - tag: ppc64le-musl-hardened-openrc            platform: linux/ppc64le
          # - tag: ppc64le-openrc            platform: linux/ppc64le
          # - tag: ppc64le-systemd            platform: linux/ppc64le
          # - tag: rv64_lp64-openrc            platform: linux/riscv64
          # - tag: rv64_lp64-systemd            platform: linux/riscv64
          # - tag: rv64_lp64d-openrc            platform: linux/riscv64
          # - tag: rv64_lp64d-systemd            platform: linux/riscv64
          # - tag: s390x            platform: linux/s390x
          # - tag: systemd            platform: linux/386
          # - tag: systemd            platform: linux/amd64
          # - tag: systemd linux            platform: arm/v5


## TODO: KaOS
## TODO: mint
## TODO: pclinuxos
## TODO: solus
## TODO: nixos?

## Unsupported

# - cirros:latest # no package manager




  # docker-qemu:
  #   env: { image: "qemu/${{ matrix.arch }}:latest" }
  #   needs: bootstrap
  #   runs-on: ubuntu-latest
  #   steps: *docker-steps
  #   strategy:
  #     fail-fast: false
  #     matrix:
  #       platform:
  #         - amd64
  #       arch:
  #         # - alpha
  #         # - alpha-slim
  #         # - amd64
  #         # - amd64-slim
  #         # - arm64
  #         # - arm64-slim
  #         # - armel
  #         # - armel-slim
  #         # - armhf
  #         # - armhf-slim
  #         # - hppa
  #         # - hppa-slim
  #         # - hurd-i386
  #         # - hurd-i386-slim
  #         # - i386
  #         # - i386-slim
  #         # - kfreebsd-amd64
  #         # - kfreebsd-amd64-slim
  #         # - kfreebsd-i386
  #         # - kfreebsd-i386-slim
  #         # - m68k
  #         # - m68k-slim
  #         # - mips
  #         # - mips-slim
  #         # - mipsel
  #         # - mipsel-slim
  #         # - powerpc
  #         # - powerpc-slim
  #         # - powerpcspe
  #         # - powerpcspe-slim
  #         # - ppc64
  #         # - ppc64-slim
  #         # - ppc64el
  #         # - ppc64el-slim
  #         # - s390x
  #         # - s390x-slim
  #         # - sh4
  #         # - sh4-slim
  #         # - sparc64
  #         # - sparc64-slim
  #         # - sparc64-slim-slim
  #         # - x32
  #         # - x32-slim

  #         # - i386
  #         # - arm
  #         # - aarch64
  #         # - x86-64
  #         # - alpha
  #         # - cris
  #         # - lm32
  #         # - moxie
  #         # - ppc
  #         # - sparc
  #         # - ppcemb
  #         # - sparc64
  #         # - tricore
  #         # - unicore32
  #         # - microblazeel
  #         # - m68k
  #         # - microblaze
  #         # - mipsel
  #         # - mips
  #         # - mips64
  #         # - mips64el
  #         # - sh4
  #         # - ppc64
  #         # - or32
  #         # - sh4eb
  #         # - xtensaeb
  #         # - xtensa
  #         # - cdrom
  #         # - nbd
  #         # - img
  #         # - io
  #         # - boot-command
  #         # - ivshmem
  #         # - ksm

# # qemu/base
# # qemu/tools



# Android
#   Android Wear
#   Android TV
# iOS

# SELinux

# TODO: compiler: gcc, llvm, icc
# TODO: pre-statx linux (and other kernel implementations)
# TODO: WSLv1, WSLv2, different bash ports (MSYS,MingW,Cygwin,GitBash)
# TODO: filesystems: zfs, btrfs, ext4
# TODO: setup-qemu

#arm32v5
#winamd64
#windows-amd64

### Arch as user
# amd64
# arm32v5
# arm32v6
# arm32v7
# arm64v8
# i386
# mips64le
# ppc64le
# riscv64
# s390x

# winamd64
