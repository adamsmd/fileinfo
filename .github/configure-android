#!/bin/bash

script_name="$0"

check () {
  eval "tmp=\$$1"
  if test "x$tmp" = "x"; then
    echo "$script_name: error: variable \$$1 is not set"
    exit 1
  fi
}

## Set by the virtual environments
check ANDROID_SDK_ROOT

## Set by the workflow
check ARCH
check API
check NDK

echo "ANDROID_SDK_ROOT=$ANDROID_SDK_ROOT"
echo "ARCH=$ARCH"
echo "API=$API"
echo "NDK=$NDK"

if ls "$ANDROID_SDK_ROOT/ndk/$NDK/toolchains/x86-"*"/prebuilt/"*"/bin" >/dev/null 2>&1; then
  echo Using GCC
  BIN_DIR="$ANDROID_SDK_ROOT/ndk/$NDK/toolchains"
  SYSROOT=""
  SYSROOT="$SYSROOT -isystem $ANDROID_SDK_ROOT/ndk/$NDK/sysroot/usr/include/"
  SYSROOT="$SYSROOT -isysroot$ANDROID_SDK_ROOT/ndk/$NDK/sysroot"
  SYSROOT="$SYSROOT --sysroot=$ANDROID_SDK_ROOT/ndk/$NDK/platforms/android-$API"
  ARCH_INC="$ANDROID_SDK_ROOT/ndk/$NDK/sysroot/usr/include"
  case "$ARCH" in
    armeabi-v7a)
      BIN_DIR="$(echo "$BIN_DIR/arm-linux-androideabi-"*)"
      SYSROOT="$SYSROOT/arch-arm"
      TRIPLE=arm-linux-androideabi;;
    arm64-v8a)
      BIN_DIR="$(echo "$BIN_DIR/aarch64-linux-android-"*)"
      SYSROOT="$SYSROOT/arch-arm64"
      TRIPLE="aarch64-linux-android";;
    x86)
      BIN_DIR="$(echo "$BIN_DIR/x86-"*)"
      SYSROOT="$SYSROOT/arch-x86"
      TRIPLE="i686-linux-android";;
    x86_64)
      BIN_DIR="$(echo "$BIN_DIR/x86_64-"*)"
      SYSROOT="$SYSROOT/arch-x86_64"
      TRIPLE="x86_64-linux-android";;
    # TODO: other ABIs in older NDKs
    *) echo "$script_name: error: unknown ARCH: $ARCH"; exit 1;;
  esac
  BIN_DIR="$(echo "$BIN_DIR/prebuilt/"*"/bin")"
  echo "BIN_DIR=$BIN_DIR"
  echo "TRIPLE=$TRIPLE"
  echo "SYSROOT=$SYSROOT"

  AR="$BIN_DIR/$TRIPLE-ar"
  CC="$BIN_DIR/$TRIPLE-gcc $SYSROOT -isystem $ARCH_INC/$TRIPLE"
  CXX="$BIN_DIR/$TRIPLE-g++ $SYSROOT"
  AS="$BIN_DIR/$TRIPLE-as"
  LD="$BIN_DIR/$TRIPLE-ld $SYSROOT"
  RANLIB="$BIN_DIR/$TRIPLE-ranlib"
  STRIP="$BIN_DIR/$TRIPLE-strip"
else
  echo Using LLVM

  # See https://developer.android.com/ndk/guides/other_build_systems
  # See https://android.googlesource.com/platform/ndk/+/master/docs/BuildSystemMaintainers.md
  case "$ARCH" in
    armeabi-v7a) ABI=armeabi-v7a; TRIPLE=armv7a-linux-androideabi;;
    arm64-v8a)   ABI=aarch64-v8a; TRIPLE=aarch64-linux-android;;
    x86)         ABI=x86;         TRIPLE=i686-linux-android;;
    x86_64)      ABI=x86_64;      TRIPLE=x86_64-linux-android;;
    # TODO: other ABIs in older NDKs
    *) echo "$script_name: error: unknown ARCH: $ARCH"; exit 1;;
  esac

  ## Chooses one of darwin-x86_64 or linux-x86_64 depending on your build machine
  BIN_DIR="$(echo "$ANDROID_SDK_ROOT/ndk/$NDK/toolchains/llvm/prebuilt/"*"/bin")"

  echo "ABI=$ABI"
  echo "TRIPLE=$TRIPLE"
  echo "BIN_DIR=$BIN_DIR"

  # /usr/local/lib/android/sdk/ndk/16.1.4479499/toolchains/llvm/prebuilt/linux-x86_64/bin/clang

  AR="$BIN_DIR/llvm-ar"
  CC="$BIN_DIR/$TRIPLE$API-clang"
  CXX="$BIN_DIR/$TRIPLE$API-clang++"
  AS="$CC"
  LD="$BIN_DIR/ld"
  RANLIB="$BIN_DIR/llvm-ranlib"
  STRIP="$BIN_DIR/llvm-strip"
fi

export AR
export CC
export CXX
export AS
export LD
export RANLIB
export STRIP

echo "AR=$AR"
echo "CC=$CC"
echo "CXX=$CXX"
echo "AS=$AS"
echo "LD=$LD"
echo "RANLIB=$RANLIB"
echo "STRIP=$STRIP"

./configure --host="$TRIPLE" "$@" || { cat config.log; false; }
