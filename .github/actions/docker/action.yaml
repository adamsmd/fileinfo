name: Something
inputs:
  platform:
    description: The Docker platform to run on
    required: true
  image:
    description: The Docker image to run on
    required: true

runs:
  using: "composite"
  steps:
    # Setup multi-platform support for docker
    - uses: docker/setup-qemu-action@v1.2.0

    # Try to create a container for the given platform and image
    - name: Create container
      shell: bash
      run: |
        set +e
        cont=$(docker run --pull=missing --init --detach --platform ${{ inputs.platform }} ${{ inputs.image }} tail -f /dev/null)
        missing=$?
        set -e

        echo "::notice ::missing=$missing"
        echo "missing=$missing" >> $GITHUB_ENV

        echo "::notice ::cont=$cont"
        echo "cont=$cont" >> $GITHUB_ENV

    # Create the working directory
    - if: ${{ !env.missing }}
      shell: bash
      run: echo "${{ env.missing }}"
    - if: ${{ !env.missing }}
      shell: bash
      run: echo "workdir=/workdir" >> $GITHUB_ENV
    - if: ${{ !env.missing }}
      shell: bash
      run: echo "::notice ::workdir=$workdir"
    - if: ${{ !env.missing }}
      shell: bash
      run: docker exec "$cont" uname -a
    - if: ${{ !env.missing }}
      shell: bash
      run: docker exec "$cont" mkdir "$workdir"

    # Copy the artifact to the working directory
    - if: ${{ !env.missing }}
      uses: actions/download-artifact@v2
      with: { name: bootstrap-output }
    - if: ${{ !env.missing }}
      shell: bash
      run: docker cp - <fileinfo.tar "$cont":"$workdir"

    # Install dependencies
    - if: ${{ !env.missing }}
      shell: bash
      run: docker exec --workdir="$workdir" "$cont" bin/install-deps

    # Build
    - if: ${{ !env.missing }}
      shell: bash
      run: docker exec --workdir="$workdir" "$cont" ./configure
    - if: ${{ !env.missing }}
      shell: bash
      run: docker exec --workdir="$workdir" "$cont" cat src/config.h
    - if: ${{ !env.missing }}
      shell: bash
      run: docker exec --workdir="$workdir" "$cont" cat src/fileinfo/static.h
    - if: ${{ !env.missing }}
      shell: bash
      run: docker exec --workdir="$workdir" "$cont" make
    - if: ${{ !env.missing }}
      shell: bash
      run: docker exec --workdir="$workdir" "$cont" make check

    # Cleanup
    - if: ${{ !env.missing }}
      shell: bash
      run: docker stop "$cont"
    - if: ${{ !env.missing }}
      shell: bash
      run: docker rm --force --volumes "$cont"
